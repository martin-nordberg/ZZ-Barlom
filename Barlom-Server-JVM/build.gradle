
buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_gradle_version"
    }

}

group 'org.barlom'
version '1.0-SNAPSHOT'

buildDir = "$buildRoot/Barlom-Server-JVM"

apply plugin: 'kotlin'
apply plugin: 'application'

mainClassName = 'jvm.org.barlom.presentation.server.main.ApplicationKt'

defaultTasks 'run'

sourceCompatibility = 1.10

repositories {
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
}

dependencies {

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.apache.logging.log4j:log4j-api:$log4j_version"
    compile "org.apache.logging.log4j:log4j-core:$log4j_version"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"
    compile "io.ktor:ktor-server-jetty:$ktor_version"

    compile project( ':Barlom-Client-JS' )
    compile project( ':Barlom-Domain-JVM' )

    testCompile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junit_version"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

task copyWebResources(type: Copy) {

    from('../build/Barlom-Client-JS/resources/main/web')
    include('**/*.*')

    into('scripts') {
        from('../build/Barlom-Client-JS/classes/kotlin/main')
        from('../build/Barlom-Domain-JS/classes/kotlin/main')
        from('../build/Barlom-Foundation-JS/classes/kotlin/main')
        from('../build/Katydid-VDOM-JS/classes/kotlin/main')
        from('../build/Katydid-Events-JS/classes/kotlin/main')
        include('**/*.*')
    }

    into('../build/website')

}

task unzipKotlinJs(type: Copy) {

    from zipTree("../lib/kotlin-stdlib-js-${kotlin_version}.jar")

    into('../build/website/scripts/lib')

}

processResources.dependsOn( copyWebResources )
processResources.dependsOn( unzipKotlinJs )
