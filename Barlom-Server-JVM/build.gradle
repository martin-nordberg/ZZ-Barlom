
buildscript {

    ext.kotlin_version = '1.2.30'
    ext.ktor_version = '0.9.1'
    ext.log4j_version = '2.11.0'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
    }

}

group 'org.barlom'
version '1.0-SNAPSHOT'

buildDir = '../build/Barlom-Server-JVM'

apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'application'

mainClassName = 'jvm.org.barlom.presentation.server.main.ApplicationKt'

defaultTasks 'run'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
}

dependencies {

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.apache.logging.log4j:log4j-api:$log4j_version"
    compile "org.apache.logging.log4j:log4j-core:$log4j_version"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"
    compile "io.ktor:ktor-server-jetty:$ktor_version"

    compile project( ':Barlom-Client-JS' )
    compile project( ':Barlom-Domain-JVM' )

    testCompile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testCompile 'org.junit.platform:junit-platform-runner:1.1.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

junitPlatform {
    details 'tree'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

task copyWebResources(type: Copy) {

    from('../build/Barlom-Client-JS/resources/main/web')
    include('**/*.*')

    into('scripts') {
        from('../build/Barlom-Client-JS/classes/kotlin/main')
        from('../build/Barlom-Domain-JS/classes/kotlin/main')
        from('../build/Barlom-Foundation-JS/classes/kotlin/main')
        from('../build/KatyDOM-JS/classes/kotlin/main')
        include('**/*.*')
    }

    into('../build/website')

}

task unzipKotlinJs(type: Copy) {

    from zipTree('../lib/kotlin-stdlib-js.jar')

    into('../build/website/scripts/lib')

}

processResources.dependsOn( copyWebResources )
processResources.dependsOn( unzipKotlinJs )

//run.dependsOn assemble
